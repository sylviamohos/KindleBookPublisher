@startuml
actor "Client" as client
participant "Load Balancer/ECS" as loadBalancer
entity "RemoveBookFromCatalogActivity" as RemoveBookFromCatalogActivity
entity "CatalogDao" as catalogDao
database "DynamoDB" as dynamoDB

title Remove Book From Catalog

client -> loadBalancer : HTTP Request
loadBalancer ->  RemoveBookFromCatalogActivity : execute(RemoveBookFromCatalogRequest)
RemoveBookFromCatalogActivity -> catalogDao : getBookFromCatalog(bookId)
catalogDao -> dynamoDB : query for latest version of Book

alt if book does not exist or is inactive
dynamoDB --> catalogDao : return no Book data
CatalogDao --> RemoveBookFromCatalogActivity : return null Book
RemoveBookFromCatalogActivity --> loadBalancer : throw BookNotFoundException
loadBalancer --> client : 400 Response
else continue
end

dynamoDB --> catalogDao : return Book data
catalogDao --> RemoveBookFromCatalogActivity : return CatalogItemVersion
removeBookFromCatalogActivity -> RemoveBookFromCatalogActivity : create RemoveBookFromCatalogResponse
removeBookFromCatalogActivity --> loadBalancer : return RemoveBookFromCatalogResponse
loadBalancer --> client : 200 response with RemoveBookFromCatalogResult

@enduml